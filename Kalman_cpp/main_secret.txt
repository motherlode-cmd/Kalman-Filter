
#include <iostream>
#include "model/Navigation.hpp"
#include "model/Filter.hpp"
int main() {
    std::cout << "Hello, World!" << std::endl;
    my_Vector vec(4);
    vec.set(3, 2);
    my_Vector copy(vec);
    copy.set(1,1);
    copy = vec - copy * 10;
    vec = copy.reverse();
    //copy.print();
    //vec.print();
    Matrix m(4,4,4);
    m.set(1,0,3);
    m.set(3,2,1);
    m.set(2,3,1);
    m.set(0,1,3);
    m.set(2,1,5);
    m.set(1,2,5);
    //m.print();
    //copy.cut(3);
    //copy.print();
    //copy = m * copy;
    //copy.print();
    //1.5 0.5 2.5 -0.5

    //1 1 2 0 = 7
    //1 1 0 2 = 1
    //2 0 1 0 = 5.5
    //0 2 0 1 = 0.5
    Matrix tst(3, 3, 0);
    tst.set(0, 0, 4);
    tst.set(0, 1, 12);
    tst.set(0, 2, -16);
    tst.set(1,0,12);
    tst.set(1,1,37);
    tst.set(1,2,-43);
    tst.set(2,1,-43);
    tst.set(2,0,-16);
    tst.set(2,2,98);

    my_Vector b(3);
    b.set(0,8);
    b.set(1,3);
    b.set(2,4);

    b.print();
    tst.print();
    tst.solve_system(b).print();
    tst.choleskyDecomposition().print();
    return 0;
}
